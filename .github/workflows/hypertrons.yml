name: Hypertrons CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    timeout-minutes: 30

    env:
      SLACK_CHANNEL: cicd
      SLACK_COLOR: "#008000"
      SLACK_ICON: http://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
      SLACK_TITLE: Message
      SLACK_USERNAME: GitHub Actions
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      SLACK_MESSAGE_TEMPLATE: Project `${{ github.repository }}` `${{ github.event_name }}` by `${{ github.actor }}` build

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: NPM install
        run: npm install && npm install typescript@latest -g
      - name: Run lint
        run: npm run lint -- --fix
      - name: Run cov
        run: npm run cov
      - name: Run tsc
        run: npm run tsc
      - name: Markdown check
        uses: docker://openxlab/open-md-checker:latest
      - name: Run license-check
        uses: docker://openxlab/open-license-check:latest

      - name: Slack Notification(Success)
        uses: rtCamp/action-slack-notify@v2.0.0
        if: success() && env.SLACK_WEBHOOK != null
        env:
          SLACK_MESSAGE: ${{ env.SLACK_MESSAGE_TEMPLATE}} `success`.
      - name: Slack Notification(Failure)
        uses: rtCamp/action-slack-notify@v2.0.0
        if: failure() && env.SLACK_WEBHOOK != null
        env:
          SLACK_COLOR: "#FF0000"
          SLACK_MESSAGE: ${{ env.SLACK_MESSAGE_TEMPLATE}} `failure`.
      - name: Slack Notification(Cancelled)
        uses: rtCamp/action-slack-notify@v2.0.0
        if: cancelled() && env.SLACK_WEBHOOK != null
        env:
          SLACK_COLOR: "#FFFF00"
          SLACK_MESSAGE: ${{ env.SLACK_MESSAGE_TEMPLATE}} `cancelled`.
